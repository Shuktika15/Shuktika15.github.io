@import "./animations.scss";

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  background: transparent;
}

:root {
  --primary-color: #F5F5F5;
  --secondary-color: #111111;
  --accent-color: royalblue;
  --light-color: 255, 255, 255;
  --dark-color: 0, 0, 0;
  --shadow: 0 0 0.5rem 0.25rem rgba(0, 0, 0, 0.1);

  --mulish: 'Mulish', sans-serif;
  --merriweather: 'Merriweather', serif;
  --delius: 'Delius', cursive;
  --fast-transition: 200ms ease-out;
  --medium-transition: 500ms ease-out;
  --slow-transition: 1s ease-out;
  --h1-font-size: 1.5rem;
  --h3-font-size: 1.25rem;
  --p-font-size: 1rem;
  --h1-font-family: var(--mulish);
  --h3-font-family: var(--merriweather);
  --h4-font-family: var(--mulish);
  --p-font-family: var(--delius);
  --section-gap: 1rem;
  --article-gap: 0.75rem;
}

.dark-theme {
  --primary-color: #03001C;
  --secondary-color: #B6EADA;
  --accent-color: #5B8FB9;
  --light-color: 5, 19, 35;
  --shadow: 0 0 0.5rem 0.25rem rgba(255, 255, 255, 0.1);
}

html {
  scroll-behavior: smooth;
  scroll-padding: 5rem;
}

body {
  background-color: var(--primary-color);
  color: var(--secondary-color);
  font-size: 1rem;
  letter-spacing: 0.5px;
  overflow-x: hidden;
}

h1 {
  font-size: var(--h1-font-size);
  font-family: var(--h1-font-family);
}

h3 {
  font-size: var(--h3-font-size);
  font-family: var(--h3-font-family);
}

h4 {
  font-family: var(--h4-font-family)
}

p {
  font-size: var(--p-font-size);
  font-family: var(--p-font-family);
  font-weight: 500;
}

div {
  font-family: var(--p-font-family);
}

a {
  color: initial;
  text-decoration: none;

  &:active {
    color: initial;
  }
}

.container {
  padding: 0 1rem;
  margin: 0 auto;
}

main {
  display: grid;
  gap: 2rem;
}

.content {
  opacity: 0.6;
}

.btn {
  width: max-content;
  padding: 0.75rem 1rem;
  border: none;
  outline-color: transparent;
  border-radius: 0.5rem;
  font-size: var(--p-font-size);
  font-family: var(--mulish);
  text-transform: uppercase;
  font-weight: bold;
  letter-spacing: 0.1rem;
  transition: var(--fast-transition);
  color: rgba(var(--light-color));
  background-color: var(--accent-color);
  box-shadow: var(--shadow);
  cursor: pointer;

  &:active {
    transform: scale(0.95);
  }

  &:disabled {
    box-shadow: none;
    transform: scale(1);
    filter: grayscale(100%) opacity(50%);
    cursor: not-allowed;
  }

  svg {
    fill: rgba(var(--light-color));
  }

  .icon {
    height: var(--p-font-size);
  }
}

section {
  display: grid;
  gap: var(--section-gap);
}

article {
  display: grid;
  gap: var(--article-gap);
}

img {
  max-width: 100%;
  height: auto;
}

input, textarea {
  display: block;
  padding: 0.5rem 0.75rem;
  border: none;
  outline: 0.1rem solid rgba(var(--dark-color), 0.1);
  border-radius: 0.25rem;
  background-color: rgb(var(--light-color));
  font-size: var(--p-font-size);
  font-family: var(--p-font-family);
  transition: var(--fast-transition);

  &:is(:focus, :active) {
    outline-color: var(--accent-color);
    box-shadow: var(--shadow);
  }

  &:disabled {
    box-shadow: none;
    filter: opacity(0.5);
    cursor: not-allowed;
  }
}

textarea {
  resize: vertical;

  &:disabled {
    resize: none;
  }
}

@mixin tooltip-position($position: bottom) {
  &::before {
    inset: initial;

    @if ($position == bottom) {
      top: calc(100% + 0.25rem);
      transform-origin: top;
    } @else if ($position == left) {
      right: calc(100% + 0.25rem);
      transform-origin: right;
    } @else if ($position == right) {
      left: calc(100% + 0.25rem);
      transform-origin: left;
    } @else if ($position == top) {
      bottom: calc(100% + 0.25rem);
      transform-origin: bottom;
    }
  }
}

[data-tooltip] {
  position: relative;
  @include tooltip-position();

  &::before {
    content: attr(data-tooltip);
    position: absolute;
    background-color: var(--secondary-color);
    color: var(--primary-color);
    text-align: center;
    border-radius: 0.25rem;
    font-size: small;
    font-family: var(--mulish);
    z-index: 101;
    overflow: hidden;
    filter: opacity(0);
    transform: scale(0);
    transition: var(--fast-transition);
    padding: 0.25rem;
  }

  &:hover::before {
    transform: scale(1);
    filter: opacity(0.6)
  }
}

[data-tooltip-position='left'] {
  @include tooltip-position('left');
}

[data-tooltip-position='right'] {
  @include tooltip-position('right');
}

[data-tooltip-position='top'] {
  @include tooltip-position('top');
}

.error-text {
  font-family: monospace;
  color: #e7593e;
}

.icon {
  height: 1.25rem;
  aspect-ratio: 1;
}

.bg-light {
  background-color: var(--light-color);
}

.color-accent {
  color: var(--accent-color);
}

.card {
  border-radius: 1rem;
  background-color: rgba(var(--light-color));
}

.card-body {
  padding: 1rem 1rem 0.5rem 1rem;
  display: grid;
  gap: 0.75rem;
  border-radius: 0 0 1rem 1rem;
}

.card-footer {
  padding: 0.5rem 1rem 1rem 1rem;
}

.transition {
  transition: 500ms ease-out;
}

.relative {
  inset: 0;
  position: relative;
}

.no-slide {
  opacity: 0;
  top: 1rem;
}

.slide {
  opacity: 1;
  top: 0 !important;
}

@media screen and (min-width: 30rem) and (max-width: 45rem) {
  .container {
    max-width: 30rem;
  }

  main {
    gap: 2.25rem;
  }
}

@media screen and (min-width: 45rem) {
  :root {
    --h1-font-size: 2rem;
    --h3-font-size: 1.5rem;
    --p-font-size: 1.25rem;
  }

  html {
    scroll-padding: 5.5rem;
  }

  .icon {
    height: 1.5rem;
    aspect-ratio: 1;
  }
}

@media screen and (min-width: 45rem) and (max-width: 64rem) {
  .container {
    padding: 0 2rem;
    max-width: 45rem;
  }

  main {
    gap: 2.5rem;
  }
}

@media screen and (max-width: 64rem) {
  .transition {
    animation-delay: 0s !important;
  }
}

@media screen and (min-width: 64rem) {
  html {
    scroll-padding: 6rem;
  }

  main {
    grid-template-columns: repeat(2, 1fr);
    align-items: start;
  }

  #Landing, #AboutMe, #Skills, #Projects, #Hobbies, #Contact {
    grid-column: 1 / -1;
  }

  .no-slide {
    top: 2rem;
  }
}

@media screen and (min-width: 64rem) and (max-width: 75rem) {
  .container {
    padding: 0 3rem;
    max-width: 64rem;
  }

  main {
    gap: 2.75rem;
  }
}

@media screen and (min-width: 75rem) {
  :root {
    --section-gap: 1.5rem;
    --h1-font-size: 2.5rem;
    --h3-font-size: 1.5rem;
    --article-gap: 1rem;
  }

  .container {
    padding: 0 4rem;
    max-width: 75rem;
  }

  main {
    gap: 3rem;
  }
}
